name: 🚀 Release - BuscaLogo Desktop

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '20'
  ELECTRON_CACHE: '~/.cache/electron'
  ELECTRON_BUILDER_CACHE: '~/.cache/electron-builder'

jobs:
  release:
    name: 🚀 Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            build-command: build:linux
            artifact-name: linux-release
          - os: windows-latest
            platform: win
            build-command: build:win
            artifact-name: windows-release
          - os: macos-latest
            platform: mac
            build-command: build:mac
            artifact-name: macos-release

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Clear npm cache
        run: npm cache clean --force

      - name: 🔧 Install dependencies
        run: |
          npm ci --prefer-offline --no-audit || bash scripts/install-deps.sh
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}

      - name: 🏗️ Build application
        run: npm run ${{ matrix.build-command }}
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          # Variáveis para notarização macOS (se aplicável)
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

      - name: 📁 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: dist/
          retention-days: 90

  publish:
    name: 📤 Publish Release
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔧 Install dependencies
        run: |
          npm ci --prefer-offline --no-audit || bash scripts/install-deps.sh

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: 🏷️ Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/linux-release/**/*
            artifacts/windows-release/**/*
            artifacts/macos-release/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
