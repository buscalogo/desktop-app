name: üîç CI - BuscaLogo Desktop

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  ELECTRON_CACHE: '~/.cache/electron'
  ELECTRON_BUILDER_CACHE: '~/.cache/electron-builder'
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
  PUPPETEER_DOWNLOAD_BASE_URL: 'https://storage.googleapis.com'
  PUPPETEER_CHROMIUM_REVISION: '121.0.6167.139'
  PUPPETEER_CACHE_DIR: '~/.cache/puppeteer'

jobs:
  test:
    name: üß™ Test and Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üîß Clear npm cache
        run: npm cache clean --force

      - name: üîß Install dependencies
        run: |
          bash scripts/ci-install.sh
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ env.PUPPETEER_SKIP_CHROMIUM_DOWNLOAD }}
          PUPPETEER_DOWNLOAD_BASE_URL: ${{ env.PUPPETEER_DOWNLOAD_BASE_URL }}
          PUPPETEER_CHROMIUM_REVISION: ${{ env.PUPPETEER_CHROMIUM_REVISION }}
          PUPPETEER_CACHE_DIR: ${{ env.PUPPETEER_CACHE_DIR }}

      - name: üîç Lint code
        run: npm run lint

      - name: üîç Lint fix (check only)
        run: npm run lint:fix --dry-run

      - name: üèóÔ∏è Build validation
        run: npm run build:linux
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìÅ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build-validation
          path: dist/
          retention-days: 7

  security:
    name: üõ°Ô∏è Security Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üîß Install dependencies
        run: |
          bash scripts/ci-install.sh
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ env.PUPPETEER_SKIP_CHROMIUM_DOWNLOAD }}
          PUPPETEER_DOWNLOAD_BASE_URL: ${{ env.PUPPETEER_DOWNLOAD_BASE_URL }}
          PUPPETEER_CHROMIUM_REVISION: ${{ env.PUPPETEER_CHROMIUM_REVISION }}
          PUPPETEER_CACHE_DIR: ${{ env.PUPPETEER_CACHE_DIR }}

      - name: üîí Audit dependencies
        run: npm audit --audit-level=moderate

      - name: üîç Check for known vulnerabilities
        run: |
          if npm audit --audit-level=high; then
            echo "‚úÖ No high severity vulnerabilities found"
          else
            echo "‚ö†Ô∏è High severity vulnerabilities found"
            exit 1
          fi

  build-matrix:
    name: üèóÔ∏è Build Matrix
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            build-command: build:linux
          - os: windows-latest
            platform: win
            build-command: build:win
          - os: macos-latest
            platform: mac
            build-command: build:mac

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üîß Clear npm cache
        run: npm cache clean --force

      - name: üîß Install dependencies
        run: |
          bash scripts/ci-install.sh
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ env.PUPPETEER_SKIP_CHROMIUM_DOWNLOAD }}
          PUPPETEER_DOWNLOAD_BASE_URL: ${{ env.PUPPETEER_DOWNLOAD_BASE_URL }}
          PUPPETEER_CHROMIUM_REVISION: ${{ env.PUPPETEER_CHROMIUM_REVISION }}
          PUPPETEER_CACHE_DIR: ${{ env.PUPPETEER_CACHE_DIR }}

      - name: üèóÔ∏è Build application
        run: npm run ${{ matrix.build-command }}
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìÅ Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: dist/
          retention-days: 7

  quality:
    name: üìä Code Quality
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üîß Install dependencies
        run: |
          bash scripts/ci-install.sh
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ env.PUPPETEER_SKIP_CHROMIUM_DOWNLOAD }}
          PUPPETEER_DOWNLOAD_BASE_URL: ${{ env.PUPPETEER_DOWNLOAD_BASE_URL }}
          PUPPETEER_CHROMIUM_REVISION: ${{ env.PUPPETEER_CHROMIUM_REVISION }}
          PUPPETEER_CACHE_DIR: ${{ env.PUPPETEER_CACHE_DIR }}

      - name: üìä Check bundle size
        run: |
          npm run build:linux
          echo "üì¶ Build size:"
          du -sh dist/
          ls -la dist/
        env:
          ELECTRON_CACHE: ${{ env.ELECTRON_CACHE }}
          ELECTRON_BUILDER_CACHE: ${{ env.ELECTRON_BUILDER_CACHE }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üîç Check for large files
        run: |
          find . -type f -size +10M -not -path "./node_modules/*" -not -path "./dist/*" | head -10
